ggtitle("성별, 연령대별 월급여 변화 추이") +
xlab("나이") +
ylab("평균 급여") +
theme(plot.title = element_text(face = "bold", hjust = 0.5,
size = 15, color = "darkblue"))
ggplot(data = sex_age2,
aes(x = age, y = mean_income, col = sex)) +
geom_line(size = 0.9) +
ggtitle("성별, 연령대별 월급여 변화 추이") +
xlab("나이") +
ylab("평균 급여") +
theme(plot.title = element_text(face = "bold", hjust = 0.5,
size = 15, color = "darkblue"))
class(welfare$code_job)
table(welfare$code_job)
library(readxl)
list_job <- read_excel("Koweps_Codebook.xlsx",
col_names = T, sheet = 2)
list_job <- read_excel("Examples/Koweps_Codebook.xlsx",
col_names = T, sheet = 2)
head(list_job)
dim(list_job)
welfare <- merge(welfare, list_job)
welfare %>%
filter(!is.na(code_job)) %>%
select(code_job, job) %>%
head
welfare %>%
filter(!is.na(code_job)) %>%
select(code_job, job) %>%
head(10)
job_income <- welfare %>%
filter(!is.na(job) & !is.na(income)) %>%
group_by(job) %>%
summarise(mean_income = mean(income))
head(job_income)
dim(job_income)
top_10 <- job_income %>%
arrange(-mean_income) %>%
head(10)
top10 <- job_income %>%
arrange(-mean_income) %>%
head(10)
top10
ggplot(data = top10,
aes(x = reorder(job, mean_income), y = mean_income)) +
geom_col()
ggplot(data = top10,
aes(x = reorder(job, mean_income), y = mean_income)) +
geom_col() +
coord_flip()
ggplot(data = top10,
aes(x = reorder(job, mean_income), y = mean_income,
fill = job)) +
geom_col() +
coord_flip()
ggplot(data = top10,
aes(x = reorder(job, mean_income), y = mean_income)) +
geom_col(aes(fill = factor(job))) +
coord_flip()
ggplot(data = top10,
aes(x = reorder(job, mean_income), y = mean_income)) +
geom_col() +
coord_flip() +
ggtitle("직업별 급여수준 상위 10") +
xlab("직업") +
ylab("평균 급여") +
theme(plot.title = element_text(face = "bold", hjust = 0.5,
size = 15, color = "darkblue"))
bottom10 <- job_income %>%
arrange(mean_income) %>%
head(10)
bottom10
ggplot(data = bottom10,
aes(x = reorder(job, mean_income), y = mean_income)) +
geom_col() +
coord_flip() +
ggtitle("직업별 급여수준 하위 10") +
xlab("직업") +
ylab("평균 급여") +
theme(plot.title = element_text(face = "bold", hjust = 0.5,
size = 15, color = "darkblue"))
ggplot(data = bottom10,
aes(x = reorder(job, mean_income), y = mean_income)) +
geom_col() +
coord_flip() +
ylim(0, 850) +
ggtitle("직업별 급여수준 하위 10") +
xlab("직업") +
ylab("평균 급여") +
theme(plot.title = element_text(face = "bold", hjust = 0.5,
size = 15, color = "darkblue"))
ggplot(data = top10,
aes(x = reorder(job, mean_income), y = mean_income)) +
geom_col() +
coord_flip() +
ggtitle("직업별 급여수준 상위 10") +
xlab("직업") +
ylab("평균 급여") +
theme(plot.title = element_text(face = "bold", hjust = 0.5,
size = 15, color = "darkblue"))
ggplot(data = bottom10,
aes(x = reorder(job, mean_income), y = mean_income)) +
geom_col() +
coord_flip() +
ylim(0, 850) +
ggtitle("직업별 급여수준 하위 10") +
xlab("직업") +
ylab("평균 급여") +
theme(plot.title = element_text(face = "bold", hjust = 0.5,
size = 15, color = "darkblue"))
ggplot(data = bottom10,
aes(x = reorder(job, -mean_income), y = mean_income)) +
geom_col() +
coord_flip() +
ylim(0, 850) +
ggtitle("직업별 급여수준 하위 10") +
xlab("직업") +
ylab("평균 급여") +
theme(plot.title = element_text(face = "bold", hjust = 0.5,
size = 15, color = "darkblue"))
job_male <- welfare %>%
filter(!is.na(job) & sex == "남자") %>%
group_by(job) %>%
summarise(n = n()) %>%
arrange(-n) %>%
head(10)
job_male
job_female <- welfare %>%
filter(!is.na(job) & sex == "여자") %>%
group_by(job) %>%
summarise(n = n()) %>%
arrange(-n) %>%
head(10)
job_female
ggplot(data = job_male,
aes(x = reorder(job, n), y = n)) +
geom_col() +
coord_flip()
ggplot(data = job_male,
aes(x = reorder(job, n), y = n)) +
geom_col() +
coord_flip() +
ggtitle("남성 직업 빈도 상위 10") +
xlab("직업") +
ylab("돗수") +
theme(plot.title = element_text(face = "bold", hjust = 0.5,
size = 15, color = "darkblue"))
ggplot(data = job_female,
aes(x = reorder(job, n), y = n)) +
geom_col() +
coord_flip() +
ggtitle("여성 직업 빈도 상위 10") +
xlab("직업") +
ylab("돗수") +
theme(plot.title = element_text(face = "bold", hjust = 0.5,
size = 15, color = "darkblue"))
ggplot(data = job_female,
aes(x = reorder(job, n), y = n)) +
geom_col(width = 0.8) +
coord_flip() +
ggtitle("여성 직업 빈도 상위 10") +
xlab("직업") +
ylab("돗수") +
theme(plot.title = element_text(face = "bold", hjust = 0.5,
size = 15, color = "darkblue"))
ggplot(data = job_female,
aes(x = reorder(job, n), y = n)) +
geom_col(width = 0.7) +
coord_flip() +
ggtitle("여성 직업 빈도 상위 10") +
xlab("직업") +
ylab("돗수") +
theme(plot.title = element_text(face = "bold", hjust = 0.5,
size = 15, color = "darkblue"))
ggplot(data = job_female,
aes(x = reorder(job, n), y = n)) +
geom_col(width = 0.8) +
coord_flip() +
ggtitle("여성 직업 빈도 상위 10") +
xlab("직업") +
ylab("돗수") +
theme(plot.title = element_text(face = "bold", hjust = 0.5,
size = 15, color = "darkblue"))
ggplot(data = job_male,
aes(x = reorder(job, n), y = n)) +
geom_col(width = 0.8) +
coord_flip() +
ggtitle("남성 직업 빈도 상위 10") +
xlab("직업") +
ylab("돗수") +
theme(plot.title = element_text(face = "bold", hjust = 0.5,
size = 15, color = "darkblue"))
ggplot(data = job_female,
aes(x = reorder(job, n), y = n)) +
geom_col(width = 0.8, fill = "lightpink") +
coord_flip() +
ggtitle("여성 직업 빈도 상위 10") +
xlab("직업") +
ylab("돗수") +
theme(plot.title = element_text(face = "bold", hjust = 0.5,
size = 15, color = "darkblue"))
ggplot(data = job_male,
aes(x = reorder(job, n), y = n)) +
geom_col(width = 0.8, fill = "lightblue") +
coord_flip() +
ggtitle("남성 직업 빈도 상위 10") +
xlab("직업") +
ylab("돗수") +
theme(plot.title = element_text(face = "bold", hjust = 0.5,
size = 15, color = "darkblue"))
class(welfare$religion)
table(welfare$religion)
table(is.na(welfare$religion))
welfare <- raw_welfare
welfare <- rename(welfare,
sex = h10_g3,
birth = h10_g4,
marriage = h10_g10,
religion = h10_g11,
income = p1002_8aq1,
code_job = h10_eco9,
code_region = h10_reg7)
welfare <- left_join(welfare, list_job, id = "code_job")
class(welfare$religion)
table(welfare$religion)
wel <- merge(raw_welfare, list_job, by = "code_job")
wel <- merge(raw_welfare, list_job, by = "code_job", all = T)
wel <- merge(welfare, list_job, by = "code_job", all = T)
wel <- merge(welfare, list_job, by = "code_job")
rm(wel)
welfare$religion <- ifelse(welfare$religion == 1, "예", "아니오")
qplot(welfare$religion)
class(welfare$marriage)
table(welfare$marriage)
welfare$group_marriage <- ifelse(welfare$marriage == 1, "결혼",
ifelse(welfare$marriage == 3, "이혼", NA))
table(welfare$group_marriage)
qplot(welfare$group_marriage)
religion_marriage <- welfare %>%
filter(!is.na(group_marriage)) %>%
group_by(religion, group_marriage) %>%
summarise(n = n()) %>%
mutate(tot_group = sum(n)) %>%
mutate(pct = round(n/tot_group*100, 1))
religion_marriage
religion_marriage <- welfare %>%
filter(!is.na(group_marriage)) %>%
count(religion, group_marriage) %>%
group_by(religion) %>%
mutate(pct2 = round(n/sum(n)*100, 1))
religion_marriage
religion_marriage <- welfare %>%
filter(!is.na(group_marriage)) %>%
count(religion, group_marriage) %>%
group_by(religion) %>%
mutate(pct = round(n/sum(n)*100, 1))
religion_marriage
divorce <- religion_marriage %>%
filter(group_marriage == "이혼") %>%
select(religion, pct)
divo
divorce
ggplot(data = divorce,
aes(x = religion, y = pct)) +
geom_col()
welfare$sex <- ifelse(welfare$sex == 1, "남자", "여자")
welfare$income <- ifelse(welfare$income %in% c(0, 9999), NA,
welfare$income)
welfare$birth <- ifelse(welfare$birt == 9999, NA, welfare$birth)
welfare$age <- 2015 - welfare$birth + 1
welfare <- welfare %>%
mutate(age_gr = ifelse(age < 30, "young",
ifelse(age < 60, "middle", "old")))
welfare$religion <- ifelse(welfare$religion == 1, "예", "아니오")
class(welfare$age_gr)
table(welfare$age_gr)
age_gr_rel_marriage <- welfare %>%
filter(!is.na(group_marriage) & age_gr != "young") %>%
group_by(age_gr, religion, group_marriage) %>%
summarise(n=n()) %>%
mutate(tot_group = sum(n)) %>%
mutate(pct = round(n/tot_group * 100, 1))
age_gr_rel_marriage
table(welfare$religion)
welfare$religion <- raw_welfare$h10_g11
welfare$religion <- ifelse(welfare$religion == 1, "예", "아니오")
table(welfare$religion)
age_gr_rel_marriage <- welfare %>%
filter(!is.na(group_marriage) & age_gr != "young") %>%
group_by(age_gr, religion, group_marriage) %>%
summarise(n=n()) %>%
mutate(tot_group = sum(n)) %>%
mutate(pct = round(n/tot_group * 100, 1))
age_gr_rel_marriage
df_divorce <- age_gr_rel_marriage %>%
filter(group_marriage == "이혼") %>%
select(age_gr, religion, pct)
df_divorce
ggplot(data = df_divorce,
aes(x = age_gr, y = pct, fill = religion)) +
geom_col(position = "dodge", width = 0.7)
ggplot(data = df_divorce,
aes(x = age_gr, y = pct, fill = religion)) +
geom_col(position = "dodge", width = 0.7) +
ggtitle("연령대 및 종교 유무에 따른 이혼율") +
xlab("연령대") +
ylab("이혼율") +
theme(plot.title = element_text(face = "bold", hjust = 0.5,
size = 15, color = "darkblue"))
list_region
list_region <- data.frame(code_region = c(1:7),
region = c("서울",
"수도권(인천/경기)",
"부산/경남/울산",
"대구/경북",
"대전/충남",
"강원/충북",
"광주/전남/전북/제주"))
list_region
welfare <- left_join(welfare, list_region, id = "code_region")
welfare %>% select(code_region, region) % head
welfare %>% select(code_region, region)  %>%  head
region_age_gr <- welfare %>%
count(region, age_gr) %>%
group_by(region) %>%
mutate(pct = round(n / sum(n) * 100, 1))
head(region_age_gr)
region_age_gr <- welfare %>%
count(region, age_gr) %>%
group_by(region) %>%
mutate(pct = round(n / sum(n) * 100, 2))
head(region_age_gr)
ggplot(data = region_age_gr,
aes(x = region, y = pct, fill = age_gr)) +
geom_col(width = 0.8) +
coord_flip()
list_order_old <- region_age_gr %>%
filter(age_gr == "old") %>%
arrange(pct)
list_order_old
order <- list_order_old$region
ggplot(data = region_age_gr,
aes(x = region, y = pct, fill = age_gr)) +
geom_col(width = 0.8) +
coord_flip() +
scale_x_discrete(limits = order)
ggplot(data = region_age_gr,
aes(x = region, y = pct, fill = age_gr)) +
geom_col(width = 0.8) +
coord_flip() +
scale_x_discrete(limits = order) +
ggtitle("지역별 연령대 비율") +
xlab("백분율") +
ylab("지역") +
theme(plot.title = element_text(face = "bold", hjust = 0.5,
size = 15, color = "darkblue"))
ggplot(data = region_age_gr,
aes(x = region, y = pct, fill = age_gr)) +
geom_col(width = 0.8) +
coord_flip() +
scale_x_discrete(limits = order) +
ggtitle("지역별 연령대 비율") +
ylab("백분율") +
xlab("지역") +
theme(plot.title = element_text(face = "bold", hjust = 0.5,
size = 15, color = "darkblue"))
region_age_gr$age_gr <- factor(region_age_gr$age_gr,
levels = c("old", "middle", "young"))
class(region_age_gr$age_gr)
levels(region_age_gr$age_gr)
ggplot(data = region_age_gr,
aes(x = region, y = pct, fill = age_gr)) +
geom_col(width = 0.8) +
coord_flip() +
scale_x_discrete(limits = order) +
ggtitle("지역별 연령대 비율") +
ylab("백분율") +
xlab("지역") +
theme(plot.title = element_text(face = "bold", hjust = 0.5,
size = 15, color = "darkblue"))
rm(list=ls())
install.packages("rJava")
install.packages("memoise")
install.packages("KoNLP")
library(KoNLP)
library(dplyr)
useNIADic()
txt <- readLines("Examples/hiphop.txt")
tail(txt)
install.packages("stringr")
install.packages("stringr")
library(stringr)
txt <- str_replace_all(txt, "\\W", " ")
tail(txt)
extractNoun("대한민국의 영토는 한반도와 그 부속도서로 한다")
library(KoNLP)
library(dplyr)
useNIADic()
extractNoun("대한민국의 영토는 한반도와 그 부속도서로 한다")
nouns <- extractNoun(txt)
wordcount <- table(unlist(nouns))
df_word <- as.data.frame(wordcount, stringsAsFactors = F)
df_word <- rename(df_word, word=Var1, freq=Freq)
head(df_word)
df_word <- filter(df_word, nchar(word) >= 2)
top20 <- df_word %>% arrange(-freq) %>% head(20)
top20
install.packages("wordcloud")
library(wordcloud)
library(RColorBrewer)
pal <- brewer.pal(8, "Dark2")
set.seed(1234)
wordcloud(words = df_word$word,
freq = df_word$freq,
min.freq = 2,
max.words = 200,
random.order = F,
rot.per = .1,
scale = c(4, 0.3),
colors = pal)
wordcloud(words = df_word$word,
freq = df_word$freq,
min.freq = 2,
max.words = 200,
random.order = F,
rot.per = .1,
scale = c(5, 0.3),
colors = pal)
wordcloud(words = df_word$word,
freq = df_word$freq,
min.freq = 2,
max.words = 200,
random.order = F,
rot.per = .1,
scale = c(3, 0.3),
colors = pal)
wordcloud(words = df_word$word,
freq = df_word$freq,
min.freq = 2,
max.words = 200,
random.order = F,
rot.per = .1,
scale = c(4, 0.3),
colors = pal)
pal <- brewer.pal(9, "Blues")[5:9]
wordcloud(words = df_word$word,
freq = df_word$freq,
min.freq = 2,
max.words = 200,
random.order = F,
rot.per = .1,
scale = c(4, 0.3),
colors = pal)
pal <- brewer.pal(8, "Dark2")
wordcloud(words = df_word$word,
freq = df_word$freq,
min.freq = 2,
max.words = 200,
random.order = F,
rot.per = .1,
scale = c(4, 0.3),
colors = pal)
twitter <- read.csv("Examples/twitter.csv")
twitter <- read.csv("Examples/twitter.csv", header = T,
stringsAsFactors = F, fileEncoding = "UTF-8")
twitter <- rename(twitter, no=번호, id=계정이름, date=작성일, tw=내용)
twitter$tw<- str_replace_all(twitter$tw,"\\W", " ")
head(twitter$tw)
nouns<-extractNoun(twitter$tw)
wordcount <-table(unlist(nouns))
df_word<-as.data.frame(wordcount, stringsAsFactors = F)
df_word<-rename(df_word,word=Var1,freq=Freq)
df_word<-filter(df_word, nchar(word)>=2)
top20<-df_word %>% arrange(-freq) %>% head(20)
top20
library(ggplot2)
order<-arrange(top20, freq)$word
ggplot(data=top20,aes(x=word,y=freq))+
ylim(0,2500) + geom_col() + coord_flip() +
scale_x_discrete(limit=order)+
geom_text(aes(label=freq), hjust=-0.3)
pal<-brewer.pal(8,"Dark2")
set.seed(1234)
wordcloud(words = df_word$word,
freq = df_word$freq,
min.freq = 2,
max.words = 200,
random.order = F,
rot.per = .1,
scale = c(4, 0.3),
colors = pal)
wordcloud(words = df_word$word,
freq = df_word$freq,
min.freq = 10,
max.words = 200,
random.order = F,
rot.per = .1,
scale = c(6, 0.2),
colors = pal)
library(extrafont)
windowsFonts()
windowsFonts(malgun = "맑은 고딕")
theme_update(text = element_text(family = "malgun"))
wordcloud(words = df_word$word,
freq = df_word$freq,
min.freq = 10,
max.words = 200,
random.order = F,
rot.per = .1,
scale = c(6, 0.2),
colors = pal)
